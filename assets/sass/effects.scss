// Use mix-blend-mode to create a hue shift effect when opening a page
#effect-reveal {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: 100vw;

    pointer-events: none;

    mix-blend-mode: difference;
    z-index: 999;
    animation: animation-effect-reveal 1s ease-in-out forwards;
}
@keyframes animation-effect-reveal {
    0% {
        background-color: darken($color-text, 40%);
    }
    50% {
        background-color: darken($color-text, 60%);
    }
    100% {
        opacity: 0;
    }
}

// Animated background noise effect
#effect-noise {
    position: fixed;
    top: -50%;
    left: -50%;
    right: -50%;
    bottom: -50%;
    width: 200%;
    height: 200vh;
    background: transparent url('/img/noise-transparent.png') repeat 0 0;
    background-repeat: repeat;
    animation: animation-effect-noise 0.5s infinite;
    z-index: -101;
}
@keyframes animation-effect-noise {
    0% { transform: translate(0,0) }
    10% { transform: translate(-5%,-5%) }
    20% { transform: translate(-10%,5%) }
    30% { transform: translate(5%,-10%) }
    40% { transform: translate(-5%,15%) }
    50% { transform: translate(-10%,5%) }
    60% { transform: translate(15%,0) }
    70% { transform: translate(0,10%) }
    80% { transform: translate(-15%,0) }
    90% { transform: translate(10%,5%) }
    100% { transform: translate(5%,0) }
}

// Rotating 3D cubes in CSS
$cube-size: 128px;
$cube-size-half: $cube-size/2;
$animation-time: 15s;
.effect-cube-container {
	width: $cube-size;
	height: $cube-size;
	perspective: $cube-size*4;
	perspective-origin: 50% $cube-size/4;

    position: absolute;
    z-index: -110;

    .effect-cube {
        position: relative;
        width: 100%;
        height: 100%;
        transform: translate(0,0);
        transform-style: preserve-3d;
        animation: animation-effect-cube $animation-time infinite linear;
    }
    .effect-cube-side {
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        width: 100%;
        height: 100%;
        transform-origin: center center;
        border: 1px solid rgba($color-background, 0.4);
        background-color: rgba($color-text, 0.8);
        box-shadow: rgba($color-text, 0.8) 0 0 $cube-size 0;
    }

    .back {
        transform: translateZ(-#{$cube-size-half}) rotateY(180deg);
    }
    
    .right {
        transform-origin: top right;
        transform: rotateY(-270deg) translateX(#{$cube-size-half});
    }
    
    .left {
        transform-origin: center left;
        transform: rotateY(270deg) translateX(-#{$cube-size-half});
    }
    
    .top {
        transform-origin: top center;
        transform: rotateX(-90deg) translateY(-#{$cube-size-half});
    }
    
    .bottom {
        transform-origin: bottom center;
        transform: rotateX(90deg) translateY(#{$cube-size-half});
    }
    
    .front {
        transform: translateZ(#{$cube-size-half});
    }
}
@keyframes animation-effect-cube {
	0%{
		transform: rotateY(45deg) rotateX(60deg); 
	}
	25% {
		transform: rotateY(135deg) rotateX(150deg);
	}
	50% {
		transform: rotateY(225deg) rotateX(240deg);
	}
	75% {
		transform: rotateY(315deg) rotateX(330deg);
	}
	100% { 
		transform: rotateY(405deg) rotateX(420deg);
	}
}

// Moving 3D grid in CSS
#effect-grid-container {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: 100vw;
    z-index: -120;

    #effect-grid {
        width: 100%;
        height: 100vh;
        overflow: hidden;
        perspective: (100vh * .75);
    
        #effect-grid-fade {	
            width: 100%;
            height: 100%;
            position: absolute;
            z-index: 1;
            background: radial-gradient(ellipse at 50% 50%,
                rgba($color-background, 0%) 0%,
                rgba($color-background, 100%) 80%);
        }
    
        #effect-grid-lines {
            width: 100%;
            height: 200%;
            background-image:
            linear-gradient(to right, $color-text 1px, transparent 0),
            linear-gradient(to bottom, $color-text 1px, transparent 0);
            background-size: 45px 30px;
            background-repeat: repeat;
            transform-origin: 100% 0 0;
            animation: effect-grid-animation 45s linear infinite;
        }
    }
}
@keyframes effect-grid-animation {
	0% {
		transform: rotateX(45deg) translateY(-50%);
	}
	100% {
		transform: rotateX(45deg) translateY(0);
	}
}

// Animated gradient background
$gradient-colors: lighten($color-background, 25%), $color-background;
#effect-gradient {
	position: fixed;
    top: 0;
    left: 0;
    width: 100%;
	height: 100%;
    z-index: -130;
    opacity: 0.5;

	background: linear-gradient(270deg, $gradient-colors);
	background-size: 200% 200%;

    transition: opacity .5s ease-in-out;
	animation: animation-effect-gradient 7.5s linear infinite;
}

@keyframes animation-effect-gradient { 
	0% { background-position: 0% 50% }
	50% { background-position: 100% 50% }
	100% { background-position: 0% 50% }
}